#!/bin/sh
#
# Based loosely on by https://gist.github.com/epiloque/8cf512c6d64641bde388

parse_yaml() {
    local prefix=$1
    local s
    local w
    local fs
    s='[[:space:]]*'
    w='[a-zA-Z0-9_]*'
    fs="$(echo @|tr @ '\034')"
    sed -ne "s|^\($s\)\($w\)$s:$s\"\(.*\)\"$s\$|\1$fs\2$fs\3$fs\0|p" \
         -e "s|^\($s\)\($w\)$s:$s\(.*\)$s\$|\1$fs\2$fs\3$fs\0|p" \
         -e "s|^\($s\)\($w\)$s-$s\(.*\)$s\$|\1$fs-$fs\3$fs\0|p" |
    awk -v fs="$fs" -v prefix=$prefix -F"$fs" '{
    indent = length($1)/2;
    vname[indent] = $2;
    for (i in vname) {if (i > indent) {delete vname[i]}}
        vn=""; for (i=0; i<indent; i++) {vn=(vn)(".")(vname[i])}
        if (prefix == (vn)(".")($2)) {
            # if we matched our length, then take everything below it until we find one that is a similar length
            if ($3 == "") {
                saveIndent = indent;
                inFind = 1;
            } else {
                print $3;
            }
        } else if (inFind == 1) {
            # did we back up to our previous indent?
            if (indent == saveIndent) {
                inFind = 0;
                saveIndent = 0;
            } else {
                print $4;
            }
        }
    }'
}

# if there is no filter, we just show the input
if [ -z "$1" -o "$1" = "." ]; then
  cat
else
  parse_yaml $1
fi



